name: C/C++ CI for Windows

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 180  # Incrementa se necessario, dipende dalla complessit√† del progetto

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache vcpkg libraries
      uses: actions/cache@v3
      with:
        path: |
          D:/a/titan-1/titan-1/vcpkg/installed
          !D:/a/titan-1/titan-1/vcpkg/packages
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        architecture: 'x64'

    - name: Check Python Installation
      run: |
        python --version
        where python

    - name: Install vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat
        .\vcpkg\vcpkg integrate install

    - name: Install dependencies with vcpkg
      run: |
        .\vcpkg\vcpkg install fmt:x64-windows --debug
        .\vcpkg\vcpkg install llvm:x64-windows --debug
        .\vcpkg\vcpkg install triton:x64-windows --debug
        .\vcpkg\vcpkg install range-v3:x64-windows --debug

    - name: Configure CMake with vcpkg toolchain
      run: |
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      run: |
        cmake --build build --config Release

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: build/*.*
